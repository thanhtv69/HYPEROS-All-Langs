name: Sync, Build, and Zip APKs with Multi-language Localization from HYPEROS

on:
  # push:
  #   branches:
  #     - master
  # schedule:
  #   - cron: '0 0 * * *' # Chạy mỗi ngày vào nửa đêm
  workflow_dispatch: # Có thể kích hoạt thủ công
    
jobs:
  sync_build_zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"

    - name: Add Upstream Remote
      run: |
        git remote add upstream https://github.com/haqanguven/HYPEROS-All-Langs.git
        git fetch upstream

    - name: Sync with Upstream
      run: |
        DEFAULT_BRANCH=$(git remote show upstream | grep 'HEAD branch' | awk '{print $NF}')
        git merge upstream/$DEFAULT_BRANCH
        git push origin $DEFAULT_BRANCH

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install zipalign
      run: |
        mkdir -p android_build_tools
        curl -L -o android_build_tools.zip https://dl.google.com/android/repository/build-tools_r30.0.3-linux.zip
        unzip android_build_tools.zip -d android_build_tools
        export PATH=$PATH:$(pwd)/android_build_tools/android-11  # Đường dẫn tới build-tools chứa zipalign
        echo "export PATH=\$PATH:$(pwd)/android_build_tools/android-11" >> $GITHUB_ENV  # Thêm vào PATH cho các bước tiếp theo

    - name: Download apktool
      run: |
        mkdir -p apktool_bin
        curl -L -o apktool_bin/apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.10.0/apktool_2.10.0.jar
        chmod +x apktool_bin/apktool.jar

    - name: Multi-language Localization Build
      env:
        OUT_DIR: "./output"
        RELEASE_NOTES: ""
        sdk_version: "30"  # Đặt phiên bản SDK, ví dụ là 30
        version_release: "11"  # Đặt phiên bản phát hành, ví dụ là 11
      run: |
        # Đường dẫn tuyệt đối đến apktool
        APK_TOOL="java -jar $(pwd)/apktool_bin/apktool.jar"
        
        # Hàm generate_public_xml tạo file public.xml từ các tài nguyên
        generate_public_xml() {
          local input_dir=$1
          local output_file=$2
          
          if [[ ! -d "$input_dir" ]]; then
              echo "Error: Input directory does not exist."
              return 1
          fi

          local output_folder
          output_folder=$(dirname "$output_file")
          if [[ ! -d "$output_folder" ]]; then
              mkdir -p "$output_folder"
          fi

          echo '<?xml version="1.0" encoding="utf-8"?>' > "$output_file"
          echo '<resources>' >> "$output_file"

          find "$input_dir" -type f | while read -r file_path; do
              file_name=$(basename "$file_path")
              basename="${file_name%.*}"
              resource_type=""
              
              if [[ "$file_name" == *"strings.xml" ]]; then
                  resource_type="string"
              elif [[ "$file_name" == *"arrays.xml" ]]; then
                  resource_type="array"
              elif [[ "$file_name" == *"plurals.xml" ]]; then
                  resource_type="plurals"
              else
                  continue
              fi
              
              grep -oP 'name="\K[^"]+' "$file_path" | while read -r name; do
                  echo "    <public type=\"$resource_type\" name=\"$name\" />" >> "$output_file"
              done
          done

          echo '</resources>' >> "$output_file"
        }

        # Hàm localization_build để xây dựng APK cho từng ngôn ngữ từ thư mục dự án
        localization_build() {
          local apk_name=$1
          local package_name=$2
          local apk_res_dir="main/${apk_name}.apk/res"
          local output_dir="$OUT_DIR/$apk_name/packed"

          mkdir -p "$output_dir"

          # Kiểm tra thư mục APK tồn tại
          if [[ ! -d "$apk_res_dir" ]]; then
              echo "Warning: Directory for $apk_name does not exist."
              RELEASE_NOTES+="Warning: Directory for $apk_name does not exist.\n"
              return 0
          fi

          # Duyệt qua tất cả các thư mục values-* để lấy mã ngôn ngữ và build
          for values_dir in "$apk_res_dir"/values-*; do
              if [[ -d "$values_dir" ]]; then
                  lang_code=$(basename "$values_dir" | cut -d'-' -f2)
                  local apk_output_dir="$OUT_DIR/$apk_name/$lang_code"
                  
                  mkdir -p "$apk_output_dir/res"
                  cp -r "$apk_res_dir/." "$apk_output_dir/res/"

                  # Tạo file public.xml cho các tài nguyên
                  generate_public_xml "$apk_output_dir/res" "$apk_output_dir/res/values/public.xml"

                  # Tạo nội dung cho AndroidManifest.xml
                  manifest_content="<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" android:compileSdkVersion=\"$sdk_version\" android:compileSdkVersionCodename=\"$version_release\" package=\"$package_name\" platformBuildVersionCode=\"$sdk_version\" platformBuildVersionName=\"$version_release\"><overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"$package_name\"/></manifest>"

                  # Tạo nội dung cho apktool.yml
                  apktool_content="version: 2.9.3\napkFileName: $apk_name.apk\nisFrameworkApk: false\nusesFramework:\n  ids:\n  - 1\n  tag: null\nsdkInfo:\npackageInfo:\n  forcedPackageId: 127\n  renameManifestPackage: null\nversionInfo:\n  versionCode: $sdk_version\n  versionName: $version_release\nresourcesAreCompressed: false\nsharedLibrary: false\nsparseResources: false\ndoNotCompress:\n- resources.arsc"
                  # Tạo file AndroidManifest.xml
                  echo -e "$manifest_content" > "$apk_output_dir/AndroidManifest.xml"

                  # Tạo file apktool.yml
                  echo -e "$apktool_content" > "$apk_output_dir/apktool.yml"
                  
                  # Build APK với ngôn ngữ hiện tại
                  $APK_TOOL b -f $apk_output_dir -o $output_dir/${apk_name}_${lang_code}.apk || { echo "Warning: Build failed for $apk_name with language $lang_code"; RELEASE_NOTES+="Warning: Build failed for $apk_name with language $lang_code.\n"; continue; }
                  zipalign -f 4 $output_dir/${apk_name}_${lang_code}.apk $output_dir/${apk_name}_${lang_code}_aligned.apk
                  mv $output_dir/${apk_name}_${lang_code}_aligned.apk $output_dir/${apk_name}_${lang_code}.apk
              fi
          done
        }

        # Danh sách các APK cần build từ repo HYPEROS
        declare -A BUILD_APK_LIST=(
          ["AICallAssistant"]="com.xiaomi.aiasst.service"
          ["AuthManager"]="com.lbe.security.miui"
          # ... thêm tất cả các APK khác
        )

        # Thêm cảnh báo nếu có thư mục trong repo nhưng không có trong BUILD_APK_LIST
        for apk_dir in main/*.apk; do
          apk_name=$(basename "$apk_dir" .apk)
          if [[ -z "${BUILD_APK_LIST[$apk_name]+_}" ]]; then
            echo "Warning: $apk_name exists in repo but is missing in BUILD_APK_LIST."
            RELEASE_NOTES+="Warning: $apk_name exists in repo but is missing in BUILD_APK_LIST.\n"
          fi
        done

        for apk_name in "${!BUILD_APK_LIST[@]}"; do
          localization_build "$apk_name" "${BUILD_APK_LIST[$apk_name]}"
        done

        # Lưu RELEASE_NOTES vào một file
        echo -e "$RELEASE_NOTES" > release_notes.txt

    - name: Zip All APKs
      run: |
        mkdir -p output
        zip -j output/all-languages-apks.zip output/*/packed/*.apk

    - name: Upload ZIP file as GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url || github.repository_url }}/releases/latest/assets?name=all-languages-apks.zip
        asset_path: output/all-languages-apks.zip
        asset_name: all-languages-apks.zip
        asset_content_type: application/zip
        body_path: release_notes.txt
